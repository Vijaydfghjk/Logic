// You can edit this code!
// Click here and start typing.
package main

import "fmt"

func Demo(arr []int, count int) {

	if count == 0 {
		return
	}

	k := len(arr) - 1
	temp := []int{}
	temp = append(temp, arr[k])
	for i := 0; i < len(arr)-1; i++ {

		temp = append(temp, arr[i])

	}
	fmt.Println(temp)

	count = count - 1

	Demo(temp, count)

}

func main() {

	arr := []int{1, 2, 3, 4, 5, 6, 7}
	Demo(arr, 3)

}









package main

import (
	"fmt"
)

func rotateSlice(arr []int, steps int) []int {
	length := len(arr)
	steps = steps % length // to handle cases where steps > length

	// Rotate the slice
	return append(arr[length-steps:], arr[:length-steps]...)
}

func main() {
	arr := []int{1, 2, 3, 4, 5, 6, 7}

	for i := 0; i < len(arr); i++ {
		routes := rotateSlice(arr, i)
		fmt.Println("routes =", routes)
	}
}
