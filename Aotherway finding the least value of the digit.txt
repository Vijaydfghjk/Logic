// You can edit this code!
// Click here and start typing.
package main

import (
	"fmt"

	"strconv"
)

func Demo(n int) {

	k := strconv.Itoa(n)
	val := ""
	temp := ""

	for i := 0; i < len(k)-1; i++ {

		temp += "0"

	}

	for j := 0; j < 1; j++ {

		if k[j] >= 49 && k[j] <= 57 {

			val = string(k[j])

		}

	}

	getnum := val + temp        // 500
	num, _ := strconv.Atoi(val) // retuning int
	num = num - 1
	f := strconv.Itoa(num) // retuning string

	getstr := f + temp
	//fmt.Println(getstr)

	num1, _ := strconv.Atoi(getnum)
	num2, _ := strconv.Atoi(getstr)

	fmt.Println(num1 - num2)
}

func main() {

	Demo(251)

}






// You can edit this code!
// Click here and start typing.
package main

import (
	"fmt"
	"strconv"
)

func Demo(a int) {

	val := strconv.Itoa(a)
	final := 0

	k := string(val[0])
	l := len(val) - 1
	temp := ""
	for i := 0; i < l; i++ {

		temp += "0"

	}

	num, _ := strconv.Atoi(k)
	num2 := num - 1

	final = num - num2

	finalstr := strconv.Itoa(final)

	finalstr = finalstr + temp

	leastval, _ := strconv.Atoi(finalstr)

	fmt.Println(leastval)
}

func main() {

	Demo(50)

}








