88. Merge Sorted Array

Input: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3
Output: [1,2,2,3,5,6]
Explanation: The arrays we are merging are [1,2,3] and [2,5,6].
The result of the merge is [1,2,2,3,5,6] with the underlined elements coming from nums1.



package main

import "fmt"

func merge(nums1 []int, m int, nums2 []int, n int) {
	for n != 0 {
		if m != 0 && nums1[m-1] > nums2[n-1] {
			nums1[m+n-1] = nums1[m-1]
			m--
		} else {
			nums1[m+n-1] = nums2[n-1]
			n--
		}
		fmt.Println(nums1)
	}

	//fmt.Println(nums1)
}

func main() {

	num1 := []int{1, 2, 3, 0, 0, 0}
	num2 := []int{2, 5, 6}
	m := 3
	n := 3
	merge(num1, m, num2, n)

}


code process 


[1 2 3 0 0 6]
loop 1
n = 3
m = 3

if m != 0 && nums1[m-1] > nums2[n-1] {
                   3 > 6 condition false 


else part 

   nums1[m+n-1] = nums2[n-1]
         
           value 0 = 6

  [1 2 3 0 0 6]

   n=2

loop 2

if m != 0 && nums1[m-1] > nums2[n-1] {
                   3 > 5 false

else part 

   nums1[m+n-1] = nums2[n-1]
          value  0 = 5
   [1 2 3 0 5 6]

   n=1

loop 3

  n=1

   if m != 0 && nums1[m-1] > nums2[n-1] {
                      3 > 2 condition true 

   
      nums1[m+n-1] = nums1[m-1]
              value 0  = 3

     [1 2 3 3 5 6]


     m=2

loop 4

    m=2

    if m != 0 && nums1[m-1] > nums2[n-1] {
                       2 > 2 false

   else part true 

      nums1[m+n-1] = nums2[n-1]

              value 3 = 2

        [1 2 2 3 5 6]


                        